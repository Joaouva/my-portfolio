{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/uva/Code/my-portfolio/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport Header from './components/Header';\nimport AboutMe from './components/AboutMe';\nimport Project from './components/Projects';\nimport Footer from './components/Footer';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport NavigationBar from './components/NavigationBar';\nimport { Sun } from \"react-feather\";\nimport { useMediaQuery } from \"react-responsive\";\nimport ReactGA from \"react-ga\";\nimport TagManager from \"react-gtm-module\";\nconst tagManagerArgs = {\n  gtmId: \"GTM-WK34BJ5\"\n};\nTagManager.initialize(tagManagerArgs);\nReactGA.initialize(\"UA-29166988-1\");\nReactGA.pageview(window.location.pathname + window.location.search);\n\nfunction App() {\n  _s();\n\n  const systemPrefersDark = useMediaQuery({\n    query: \"(prefers-color-scheme: dark)\"\n  }, undefined, prefersDark => {\n    setDarkMode(prefersDark);\n  });\n  const [darkMode, setDarkMode] = useState(systemPrefersDark);\n\n  const toggleDarkMode = () => setDarkMode(!darkMode);\n\n  useEffect(() => {\n    localStorage.setItem(\"DARK_MODE\", darkMode);\n  }, [darkMode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    \"data-theme\": darkMode ? \"dark\" : \"light\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleDarkMode,\n      className: \"theme-switch-button\",\n      children: darkMode ? /*#__PURE__*/_jsxDEV(Sun, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Sun, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(AboutMe, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Project, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"V03LqDLvBM2M4D35PE646jzlyxQ=\", false, function () {\n  return [useMediaQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/uva/Code/my-portfolio/src/App.js"],"names":["React","useEffect","useState","Header","AboutMe","Project","Footer","NavigationBar","Sun","useMediaQuery","ReactGA","TagManager","tagManagerArgs","gtmId","initialize","pageview","window","location","pathname","search","App","systemPrefersDark","query","undefined","prefersDark","setDarkMode","darkMode","toggleDarkMode","localStorage","setItem"],"mappings":";;;;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,sCAAP;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAGA,MAAMC,cAAc,GAAG;AACtBC,EAAAA,KAAK,EAAE;AADe,CAAvB;AAIAF,UAAU,CAACG,UAAX,CAAsBF,cAAtB;AAIAF,OAAO,CAACI,UAAR,CAAmB,eAAnB;AACAJ,OAAO,CAACK,QAAR,CAAiBC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,GAA2BF,MAAM,CAACC,QAAP,CAAgBE,MAA5D;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,iBAAiB,GAAGZ,aAAa,CACvC;AACCa,IAAAA,KAAK,EAAE;AADR,GADuC,EAIvCC,SAJuC,EAKtCC,WAAD,IAAiB;AAChBC,IAAAA,WAAW,CAACD,WAAD,CAAX;AACA,GAPsC,CAAvC;AAWA,QAAM,CAACE,QAAD,EAAWD,WAAX,IAA0BvB,QAAQ,CAACmB,iBAAD,CAAxC;;AACA,QAAMM,cAAc,GAAG,MAAMF,WAAW,CAAC,CAACC,QAAF,CAAxC;;AAEAzB,EAAAA,SAAS,CAAC,MAAM;AAChB2B,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCH,QAAlC;AACC,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAMC,sBACD;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,kBAAYA,QAAQ,GAAG,MAAH,GAAY,OAArD;AAAA,4BACC;AAAQ,MAAA,OAAO,EAAEC,cAAjB;AAAiC,MAAA,SAAS,EAAC,qBAA3C;AAAA,gBACED,QAAQ,gBAAG,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAa,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADvB;AAAA;AAAA;AAAA;AAAA,YADD,eAIC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAJD,eAKC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YALD,eAMC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAND,eAOI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YARD;AAAA;AAAA;AAAA;AAAA;AAAA,UADC;AAYF;;GAlCQN,G;UAEmBX,a;;;KAFnBW,G;AAoCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport Header from './components/Header';\nimport AboutMe from './components/AboutMe';\nimport Project from './components/Projects';\nimport Footer from './components/Footer';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport NavigationBar from './components/NavigationBar';\nimport { Sun } from \"react-feather\";\nimport { useMediaQuery } from \"react-responsive\";\nimport ReactGA from \"react-ga\";\nimport TagManager from \"react-gtm-module\";\n\n\nconst tagManagerArgs = {\n\tgtmId: \"GTM-WK34BJ5\",\n};\n\nTagManager.initialize(tagManagerArgs);\n\n\n\nReactGA.initialize(\"UA-29166988-1\");\nReactGA.pageview(window.location.pathname + window.location.search);\n\n\nfunction App() {\n\n  const systemPrefersDark = useMediaQuery(\n\t\t{\n\t\t\tquery: \"(prefers-color-scheme: dark)\",\n\t\t},\n\t\tundefined,\n\t\t(prefersDark) => {\n\t\t\tsetDarkMode(prefersDark);\n\t\t}\n  );\n  \n  \n  const [darkMode, setDarkMode] = useState(systemPrefersDark);\n  const toggleDarkMode = () => setDarkMode(!darkMode);\n\n  useEffect(() => {\n\t\tlocalStorage.setItem(\"DARK_MODE\", darkMode);\n  }, [darkMode]);\n\n\n  \n   return (\n\t\t<div className=\"App\" data-theme={darkMode ? \"dark\" : \"light\"}>\n\t\t\t<button onClick={toggleDarkMode} className=\"theme-switch-button\">\n\t\t\t\t{darkMode ? <Sun /> : <Sun />}\n\t\t\t</button>\n\t\t\t<NavigationBar />\n\t\t\t<Header />\n\t\t\t<AboutMe />\n\t\t    <Project />\n\t\t\t<Footer />\n\t\t</div>\n   );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}