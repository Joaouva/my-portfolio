{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/uva/Projects/my-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./App.css';import React,{useEffect,useState}from\"react\";import Header from'./components/Header';import AboutMe from'./components/AboutMe';import Project from'./components/Projects';import Footer from'./components/Footer';import\"bootstrap/dist/css/bootstrap.min.css\";import NavigationBar from'./components/NavigationBar';import{Sun}from\"react-feather\";import{useMediaQuery}from\"react-responsive\";import ReactGA from\"react-ga\";import TagManager from\"react-gtm-module\";var tagManagerArgs={gtmId:\"GTM-WK34BJ5\"};TagManager.initialize(tagManagerArgs);ReactGA.initialize(\"UA-29166988-1\");ReactGA.pageview(window.location.pathname+window.location.search);function App(){var systemPrefersDark=useMediaQuery({query:\"(prefers-color-scheme: dark)\"},undefined,function(prefersDark){setDarkMode(prefersDark);});var _useState=useState(systemPrefersDark),_useState2=_slicedToArray(_useState,2),darkMode=_useState2[0],setDarkMode=_useState2[1];var toggleDarkMode=function toggleDarkMode(){return setDarkMode(!darkMode);};useEffect(function(){localStorage.setItem(\"DARK_MODE\",darkMode);},[darkMode]);return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",\"data-theme\":darkMode?\"dark\":\"light\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:toggleDarkMode,className:\"theme-switch-button\",children:darkMode?/*#__PURE__*/_jsx(Sun,{}):/*#__PURE__*/_jsx(Sun,{})}),/*#__PURE__*/_jsx(NavigationBar,{}),/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(AboutMe,{}),/*#__PURE__*/_jsx(Project,{}),/*#__PURE__*/_jsx(Footer,{})]});}export default App;","map":{"version":3,"sources":["/Users/uva/Projects/my-portfolio/src/App.js"],"names":["React","useEffect","useState","Header","AboutMe","Project","Footer","NavigationBar","Sun","useMediaQuery","ReactGA","TagManager","tagManagerArgs","gtmId","initialize","pageview","window","location","pathname","search","App","systemPrefersDark","query","undefined","prefersDark","setDarkMode","darkMode","toggleDarkMode","localStorage","setItem"],"mappings":"+OAAA,MAAO,WAAP,CACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAO,sCAAP,CACA,MAAOC,CAAAA,aAAP,KAA0B,4BAA1B,CACA,OAASC,GAAT,KAAoB,eAApB,CACA,OAASC,aAAT,KAA8B,kBAA9B,CACA,MAAOC,CAAAA,OAAP,KAAoB,UAApB,CACA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CAGA,GAAMC,CAAAA,cAAc,CAAG,CACtBC,KAAK,CAAE,aADe,CAAvB,CAIAF,UAAU,CAACG,UAAX,CAAsBF,cAAtB,EAIAF,OAAO,CAACI,UAAR,CAAmB,eAAnB,EACAJ,OAAO,CAACK,QAAR,CAAiBC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAA2BF,MAAM,CAACC,QAAP,CAAgBE,MAA5D,EAGA,QAASC,CAAAA,GAAT,EAAe,CAEb,GAAMC,CAAAA,iBAAiB,CAAGZ,aAAa,CACvC,CACCa,KAAK,CAAE,8BADR,CADuC,CAIvCC,SAJuC,CAKvC,SAACC,WAAD,CAAiB,CAChBC,WAAW,CAACD,WAAD,CAAX,CACA,CAPsC,CAAvC,CAFa,cAamBtB,QAAQ,CAACmB,iBAAD,CAb3B,wCAaNK,QAbM,eAaID,WAbJ,eAcb,GAAME,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,SAAMF,CAAAA,WAAW,CAAC,CAACC,QAAF,CAAjB,EAAvB,CAEAzB,SAAS,CAAC,UAAM,CAChB2B,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkCH,QAAlC,EACC,CAFQ,CAEN,CAACA,QAAD,CAFM,CAAT,CAMC,mBACD,aAAK,SAAS,CAAC,KAAf,CAAqB,aAAYA,QAAQ,CAAG,MAAH,CAAY,OAArD,wBACC,eAAQ,OAAO,CAAEC,cAAjB,CAAiC,SAAS,CAAC,qBAA3C,UACED,QAAQ,cAAG,KAAC,GAAD,IAAH,cAAa,KAAC,GAAD,IADvB,EADD,cAIC,KAAC,aAAD,IAJD,cAKC,KAAC,MAAD,IALD,cAMC,KAAC,OAAD,IAND,cAOI,KAAC,OAAD,IAPJ,cAQC,KAAC,MAAD,IARD,GADC,CAYF,CAED,cAAeN,CAAAA,GAAf","sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport Header from './components/Header';\nimport AboutMe from './components/AboutMe';\nimport Project from './components/Projects';\nimport Footer from './components/Footer';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport NavigationBar from './components/NavigationBar';\nimport { Sun } from \"react-feather\";\nimport { useMediaQuery } from \"react-responsive\";\nimport ReactGA from \"react-ga\";\nimport TagManager from \"react-gtm-module\";\n\n\nconst tagManagerArgs = {\n\tgtmId: \"GTM-WK34BJ5\",\n};\n\nTagManager.initialize(tagManagerArgs);\n\n\n\nReactGA.initialize(\"UA-29166988-1\");\nReactGA.pageview(window.location.pathname + window.location.search);\n\n\nfunction App() {\n\n  const systemPrefersDark = useMediaQuery(\n\t\t{\n\t\t\tquery: \"(prefers-color-scheme: dark)\",\n\t\t},\n\t\tundefined,\n\t\t(prefersDark) => {\n\t\t\tsetDarkMode(prefersDark);\n\t\t}\n  );\n  \n  \n  const [darkMode, setDarkMode] = useState(systemPrefersDark);\n  const toggleDarkMode = () => setDarkMode(!darkMode);\n\n  useEffect(() => {\n\t\tlocalStorage.setItem(\"DARK_MODE\", darkMode);\n  }, [darkMode]);\n\n\n  \n   return (\n\t\t<div className=\"App\" data-theme={darkMode ? \"dark\" : \"light\"}>\n\t\t\t<button onClick={toggleDarkMode} className=\"theme-switch-button\">\n\t\t\t\t{darkMode ? <Sun /> : <Sun />}\n\t\t\t</button>\n\t\t\t<NavigationBar />\n\t\t\t<Header />\n\t\t\t<AboutMe />\n\t\t    <Project />\n\t\t\t<Footer />\n\t\t</div>\n   );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}